{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "userName": {
            "type": "string",
            "maxLength": 10,
            "metadata": {
                "description": "Your Proge-Software account name."
            }
        }
    },
    "variables": {
        "apiAppName": "[concat('incidentapi', toLower(parameters('userName')), uniqueString(resourceGroup().id))]",
        "dotnetAppName": "[concat('dotnetapp', toLower(parameters('userName')), uniqueString(resourceGroup().id))]",
        "hostingPlanName": "[concat('incidentappplan', uniqueString(resourceGroup().id))]",
        "repoURL": "https://github.com/Proge-Software/DevCamp.git",
        "repoBranch": "master",
        "storageName": "[substring(toLower(concat('incidentblobstg', toLower(parameters('userName')), uniqueString(resourceGroup().id))), 0, 24)]",
        "diagStorageName": "[substring(toLower(concat('incidentdiagstg', toLower(parameters('userName')), uniqueString(resourceGroup().id))), 0, 24)]",
        "storageType": "Standard_LRS",
        "queueName": "thumbnails",
        "imgContainerName": "images",
        "docDBName": "[concat('incidentdb', uniqueString(resourceGroup().id))]",
        "docDBCollectionId": "[concat('incidents', toLower(parameters('userName')))]",
        "redisCacheName": "[concat('incidentcache', uniqueString(resourceGroup().id))]",
        "dtlName": "DevCamp",
        "dtlVnetName": "DevCampVnet",
        "dtlVnetId": "[resourceId('Microsoft.DevTestLab/labs/virtualNetworks', variables('dtlName'), variables('dtlVnetName'))]",
        "dtlVmName": "[take(concat(toLower(parameters('userName')), uniqueString(resourceGroup().id)), 15)]",
        "dtlVmSize": "Standard_DS2_v2",
        "dtlVmStorage": "Premium",
        "dtlVmUsername": "l-admin",
        "dtlVmPassword": "Devc@mp2016!",
        "chocoPackages": "Git-Credential-Manager-for-Windows,azure-cli,webpicmd",
        "containerAppName": "[concat('containerapp', toLower(parameters('userName')), uniqueString(resourceGroup().id))]",
        "dockerRegistryUsername": "progedevcamp",
        "dockerRegistryPassword": null,
        "dockerRegistryStartupCommand": "",
        "alwaysOn": "false",
        "subscriptionId": "5d71b05c-3bd6-4055-836d-99b7558bd920",
        "serverFarmResourceGroup": "Corso-MS-Cloud-linux",
        "containerHostingPlanName": "appsrvplanlinux",
        "hostingEnvironment": "",
        "linuxFxVersion": "DOCKER|progedevcamp.azurecr.io/proge/welcome:latest",
        "dockerRegistryUrl": "https://progedevcamp.azurecr.io"
    },
    "resources": [
        {
            "name": "[variables('storageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [],
            "tags": {
                "displayName": "Storage"
            },
            "properties": {
                "accountType": "[variables('storageType')]"
            }
        },
        {
            "name": "[variables('diagStorageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [],
            "tags": {
                "displayName": "DiagnosticStorage"
            },
            "properties": {
                "accountType": "[variables('storageType')]"
            }
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[variables('apiAppName')]",
            "kind": "api",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
                "displayName": "ApiApp"
            },
            "properties": {
                "name": "[variables('apiAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            },
            "resources": [
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "2015-08-01",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('apiAppName'))]",
                        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]"
                    ],
                    "tags": {
                        "displayName": "AppSettings"
                    },
                    "properties": {
                        "AZURE_STORAGE_ACCOUNT": "[variables('storageName')]",
                        "AZURE_STORAGE_ACCESS_KEY": "[listKeys(resourceId('Microsoft.Storage/storageAccounts/', variables('storageName')), '2016-01-01').keys[0].value]",
                        "AZURE_STORAGE_BLOB_CONTAINER": "[variables('imgContainerName')]",
                        "AZURE_STORAGE_QUEUE": "[variables('queueName')]",
                        "DOCUMENTDB_ENDPOINT": "https://incidentdb4ig5etm56nkem.documents.azure.com:443/",
                        "DOCUMENTDB_COLLECTIONID": "[variables('docDBCollectionId')]",
                        "DOCUMENTDB_DATABASEID": "[variables('docDBName')]",
                        "DOCUMENTDB_PRIMARY_KEY": "RdGHLtNbFyhkqx1zE7UAJCUjNQEDnPMj49ckPqzYCMyrYlIyCrLcfW6EsfbKOjBWj03Xzffyfz05zPBBumvxNA==",
                        "REDISCACHE_HOSTNAME": "[reference(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2014-04-01').hostName]",
                        "REDISCACHE_PORT": "[reference(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2014-04-01').port]",
                        "REDISCACHE_SSLPORT": "[reference(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2014-04-01').sslPort]",
                        "REDISCACHE_PRIMARY_KEY": "[listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2014-04-01').primaryKey]",
                        "PROJECT": "Shared/API/DevCamp.API/DevCamp.API.csproj"
                    }
                },
                {
                    "apiVersion": "2015-08-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[concat('Microsoft.Web/Sites/', variables('apiAppName'))]",
                        "[concat('Microsoft.Web/Sites/', variables('apiAppName'), '/config/appsettings')]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repoURL')]",
                        "branch": "[variables('repoBranch')]",
                        "IsManualIntegration": true
                    },
                    "tags": {
                        "displayName": "Deployment"
                    }
                },
                {
                    "apiVersion": "2015-08-01",
                    "name": "logs",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('apiAppName'))]"
                    ],
                    "tags": {
                        "displayName": "Logs"
                    },
                    "properties": {
                        "applicationLogs": {
                            "fileSystem": {
                                "level": "Verbose"
                            }
                        },
                        "httpLogs": {
                            "fileSystem": {
                                "retentionInMb": 40,
                                "enabled": true
                            }
                        },
                        "failedRequestsTracing": {
                            "enabled": true
                        },
                        "detailedErrorMessages": {
                            "enabled": true
                        }
                    }
                }
            ]
        },
        {
            "name": "[variables('dotnetAppName')]",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-08-01",
            "tags": {
                "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "Resource",
                "displayName": "DotnetApp"
            },
            "properties": {
                "name": "[variables('dotnetAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]"
            },
            "resources": [
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "2015-08-01",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', variables('dotnetAppName'))]",
                        "[concat('Microsoft.Web/sites/', variables('apiAppName'))]"
                    ],
                    "tags": {
                        "displayName": "AppSettings"
                    },
                    "properties": {
                        "AZURE_STORAGE_ACCOUNT": "[variables('storageName')]",
                        "AZURE_STORAGE_ACCESS_KEY": "[listKeys(resourceId('Microsoft.Storage/storageAccounts/', variables('storageName')), '2016-01-01').keys[0].value]",
                        "AZURE_STORAGE_BLOB_CONTAINER": "[variables('imgContainerName')]",
                        "AZURE_STORAGE_QUEUE": "[variables('queueName')]",
                        "INCIDENT_API_URL": "[concat('https://', reference(resourceId('Microsoft.Web/sites/', variables('apiAppName')),'2015-08-01').defaultHostName)]",
                        "REDISCACHE_HOSTNAME": "[reference(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2014-04-01').hostName]",
                        "REDISCACHE_PORT": "[reference(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2014-04-01').port]",
                        "REDISCACHE_SSLPORT": "[reference(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2014-04-01').sslPort]",
                        "REDISCACHE_PRIMARY_KEY": "[listKeys(resourceId('Microsoft.Cache/Redis', variables('redisCacheName')), '2014-04-01').primaryKey]"
                    }
                },
                {
                    "apiVersion": "2015-08-01",
                    "name": "logs",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('dotnetAppName'))]"
                    ],
                    "tags": {
                        "displayName": "Logs"
                    },
                    "properties": {
                        "applicationLogs": {
                            "fileSystem": {
                                "level": "Verbose"
                            }
                        },
                        "httpLogs": {
                            "fileSystem": {
                                "retentionInMb": 40,
                                "enabled": true
                            }
                        },
                        "failedRequestsTracing": {
                            "enabled": true
                        },
                        "detailedErrorMessages": {
                            "enabled": true
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2016-05-15",
            "type": "Microsoft.DevTestLab/labs/virtualmachines",
            "name": "[concat(variables('dtlName'), '/', variables('dtlVmName'))]",
            "location": "[resourceGroup().location]",
            "properties": {
                "labVirtualNetworkId": "[variables('dtlVnetId')]",
                "labSubnetName": "[concat(variables('dtlVnetName'), 'Subnet')]",
                "notes": "WinServer 2019 with containers and VS2019",
                "galleryImageReference": {
                    "offer": "VisualStudio",
                    "publisher": "MicrosoftVisualStudio",
                    "sku": "VS-2015-Comm-VSU3-AzureSDK-29-WS2012R2",
                    "osType": "Windows",
                    "version": "latest"
                },
                "size": "[variables('dtlVmSize')]",
                "storageType": "[variables('dtlVmStorage')]",
                "userName": "[variables('dtlVmUsername')]",
                "password": "[variables('dtlVmPassword')]",
                "isAuthenticationWithSshKey": false,
                "disallowPublicIpAddress": false,
                "allowClaim": false,
                "artifacts": [
                    {
                        "artifactId": "[resourceId('Microsoft.DevTestLab/labs/artifactSources/artifacts', variables('dtlName'), 'public repo', 'windows-chrome')]"
                    },
                    {
                        "artifactId": "[resourceId('Microsoft.DevTestLab/labs/artifactSources/artifacts', variables('dtlName'), 'public repo', 'windows-git')]"
                    },
                    {
                        "artifactId": "[resourceId('Microsoft.DevTestLab/labs/artifactSources/artifacts', variables('dtlName'), 'public repo', 'windows-vscode')]"
                    },
                    {
                        "artifactId": "[resourceId('Microsoft.DevTestLab/labs/artifactSources/artifacts', variables('dtlName'), 'public repo', 'windows-chocolatey')]",
                        "parameters": [
                            {
                                "name": "packages",
                                "value": "[variables('chocoPackages')]"
                            }
                        ]
                    },
                    {
                        "artifactId": "[resourceId('Microsoft.DevTestLab/labs/artifactSources/artifacts', variables('dtlName'), 'public repo', 'windows-run-powershell')]",
                        "parameters": [
                            {
                                "name": "scriptFileUris",
                                "value": "[[\"https://raw.githubusercontent.com/Proge-Software/DevCamp/master/Shared/ARMTemplate/Scripts/InstallNodeJS.ps1\"]"
                            },
                            {
                                "name": "scriptToRun",
                                "value": "InstallNodeJS.ps1"
                            },
                            {
                                "name": "scriptArguments",
                                "value": ""
                            }
                        ]
                    },
                    {
                        "artifactId": "[resourceId('Microsoft.DevTestLab/labs/artifactSources/artifacts', variables('dtlName'), 'public repo', 'windows-run-powershell')]",
                        "parameters": [
                            {
                                "name": "scriptFileUris",
                                "value": "[[\"https://raw.githubusercontent.com/Proge-Software/DevCamp/master/Shared/ARMTemplate/Scripts/extrachocolatey.ps1\"]"
                            },
                            {
                                "name": "scriptToRun",
                                "value": "extrachocolatey.ps1"
                            },
                            {
                                "name": "scriptArguments",
                                "value": ""
                            }
                        ]
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[variables('containerAppName')]",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "tags": {
                "scope": "devcamp"
            },
            "dependsOn": [],
            "properties": {
                "name": "[variables('containerAppName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "DOCKER_REGISTRY_SERVER_URL",
                            "value": "[variables('dockerRegistryUrl')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                            "value": "[variables('dockerRegistryUsername')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                            "value": "[variables('dockerRegistryPassword')]"
                        },
                        {
                            "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                            "value": "false"
                        }
                    ],
                    "linuxFxVersion": "[variables('linuxFxVersion')]",
                    "appCommandLine": "[variables('dockerRegistryStartupCommand')]",
                    "alwaysOn": "[variables('alwaysOn')]"
                },
                "serverFarmId": "[concat('/subscriptions/', variables('subscriptionId'),'/resourcegroups/', variables('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', variables('containerHostingPlanName'))]",
                "hostingEnvironment": "[variables('hostingEnvironment')]",
                "clientAffinityEnabled": false
            }
        }
    ],
    "outputs": {
        "AZURE_STORAGE_ACCOUNT": {
            "type": "string",
            "value": "[variables('storageName')]"
        },
        "AZURE_STORAGE_ACCESS_KEY": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts/', variables('storageName')), '2016-01-01').keys[0].value]"
        },
        "AZURE_STORAGE_BLOB_CONTAINER": {
            "type": "string",
            "value": "[variables('imgContainerName')]"
        },
        "AZURE_STORAGE_QUEUE": {
            "type": "string",
            "value": "[variables('queueName')]"
        },
        "INCIDENT_API_URL": {
            "type": "string",
            "value": "[concat('https://', reference(resourceId('Microsoft.Web/sites/', variables('apiAppName')),'2015-08-01').defaultHostName)]"
        },
        "env": {
            "type": "object",
            "value": {
                "AZURE_STORAGE_ACCOUNT": "[variables('storageName')]",
                "AZURE_STORAGE_ACCESS_KEY": "[listKeys(resourceId('Microsoft.Storage/storageAccounts/', variables('storageName')), '2016-01-01').keys[0].value]",
                "AZURE_STORAGE_BLOB_CONTAINER": "[variables('imgContainerName')]",
                "AZURE_STORAGE_QUEUE": "[variables('queueName')]",
                "INCIDENT_API_URL": "[concat('https://', reference(resourceId('Microsoft.Web/sites/', variables('apiAppName')),'2015-08-01').defaultHostName)]"
            }
        }
    }
}